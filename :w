import {StyleSheet} from 'react-native';

export const general = {
  menuButtonSize: 20,
  settingsIconSize: 20,
  clockIconSize: 30,
};

export const icons = {
  type: 'font-awesome',
  note: 'pencil',
  task: 'check-square',
  event: 'calendar',
  settings: 'cog',
  profile: 'user-circle-o',
  leftHanded: 'chevron-left',
  neutral: 'chevron-down',
  rightHanded: 'chevron-right',
  home: 'home',
};

export const menuStyles = {
  leftHanded: 'leftHanded',
  rightHanded: 'rightHanded',
  neutral: 'neutral',
};

//Relative to moment.js
export const timeFormats = {
  twelveHours: 'hh:mm A',
  twentyfourHours: 'HH:mm',
};

export const settingsFields = {
  menuStyle: 'menuStyle',
  menu: 'menu',
  timeZone: 'timeZone',
  timeFormat: 'timeFormat',
};

export const themeFields = {
  name: 'name',
  colors: 'colors',
  items: {
    note: 'note',
    event: 'event',
    task: 'task',
    general: 'general',
  },
  styles: {
    secondaryColor: 'secondaryColor',
    mainColor: 'mainColor',
  },
};

export const defaultTheme = {
  name: 'Default',
  colors: {
    [themeFields.items.general]: {
      [themeFields.styles.secondaryColor]: '#2c2c2c',
      [themeFields.styles.mainColor]: 'white',
    },
    note: {
      [themeFields.styles.secondaryColor]: '#0099FF',
      [themeFields.styles.mainColor]: '#0099FF',
    },
    event: {
      [themeFields.styles.secondaryColor]: '#FFFD00',
      [themeFields.styles.mainColor]: '#FFFD00',
    },
    task: {
      [themeFields.styles.secondaryColor]: '#CC1614',
      [themeFields.styles.mainColor]: '#CC1614',
    },
  },
};

export const defaultSettings = {
  [settingsFields.menuStyle]: menuStyles.rightHanded,
  [settingsFields.menu]: [
    {key: 'note'},
    {key: 'task'},
    {key: 'event'},
    {key: 'settings'},
    {key: 'profile'},
  ],
  [settingsFields.timeZone]: 'GMT+1',
  [settingsFields.timeFormat]: timeFormats.twentyfourHours,
};

export const containerStyles = (settings, theme) =>
  StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor:
        theme.colors[themeFields.items.general][
          themeFields.styles.secondaryColor
        ],
      flexDirection:
        settings.menuStyle === menuStyles.neutral ? 'column' : 'row',
      justifyContent: 'center',
      marginTop: 15,
    },
    outerContainer: {
      flex: 1,
      backgroundColor:
        theme.colors[themeFields.items.general][
          themeFields.styles.secondaryColor
        ],
      padding: 10,
    },
    main: {
      flex: settings.menuStyle === menuStyles.neutral ? 9 : 4,
      paddingLeft: settings.menuStyle === menuStyles.leftHanded ? 15 : 0,
      paddingRight: settings.menuStyle === menuStyles.leftHanded ? 15 : 0,
    },
    clock: {
      flexDirection: 'row',
      borderWidth: 1,
      borderStyle: 'solid',
      borderRadius: 8,
      borderColor:
        theme.colors[themeFields.items.general][themeFields.styles.mainColor],
    },
    clockPart: {
      flex: 1,
      flexDirection: 'column',
      alignSelf: 'stretch',
      justifyContent: 'space-evenly',
      padding: 10,
    },
    time: {
      flex: 6,
      borderLeftWidth: 1,
      borderRightWidth: 1,
      borderColor:
        theme.colors[themeFields.items.general][themeFields.styles.mainColor],
    },
    clockInfo: {
      flex: 2,
    },
    menu: {
      borderWidth: 1,
      borderStyle: 'solid',
      borderColor:
        theme.colors[themeFields.items.general][themeFields.styles.mainColor],
      borderRadius: 10,
    },
    innerMenu: {
      flex: 1,
      justifyContent:
        settings[settingsFields.menuStyle] === menuStyles.neutral
          ? 'space-around'
          : 'center',
    },
    settingsFlatList: {
      flex: 1,
      justifyContent: 'space-around',
    },
  });

export const buttonStyles = theme =>
  StyleSheet.create({
    menu: {
      color:
        theme.colors[themeFields.items.general][
          themeFields.styles.secondaryColor
        ],
      borderRadius: 200,
      borderStyle: 'solid',
      borderWidth: 2,
      padding: 15,
      margin: 10,
    },
    note: {
      backgroundColor:
        theme.colors[themeFields.items.note][themeFields.styles.secondaryColor],
      borderColor:
        theme.colors[themeFields.items.note][themeFields.styles.mainColor],
    },
    task: {
      backgroundColor:
        theme.colors[themeFields.items.task][themeFields.styles.secondaryColor],
      borderColor:
        theme.colors[themeFields.items.task][themeFields.styles.mainColor],
    },
    event: {
      backgroundColor:
        theme.colors[themeFields.items.event][
          themeFields.styles.secondaryColor
        ],
      borderColor:
        theme.colors[themeFields.items.event][themeFields.styles.mainColor],
    },
    profile: {
      backgroundColor: '#a6a6a6',
      borderColor: '#a6a6a6',
    },
    settings: {
      backgroundColor: '#a6a6a6',
      borderColor: '#a6a6a6',
    },
    settingsItem: {
      padding: 10,
      flexDirection: 'row',
      alignItems: 'center',
    },
    settingsItemSelected: {
      backgroundColor:
        theme.colors[themeFields.items.general][themeFields.styles.mainColor],
    },
  });

export const textStyles = theme =>
  StyleSheet.create({
    general: {
      color:
        theme.colors[themeFields.items.general][themeFields.styles.mainColor],
    },
    clock: {
      fontSize: 16,
    },
    clockTime: {
      fontSize: 30,
    },
    note: {
      color: theme.colors[themeFields.items.note][themeFields.styles.mainColor],
    },
    task: {
      color: theme.colors[themeFields.items.task][themeFields.styles.mainColor],
    },
    event: {
      color:
        theme.colors[themeFields.items.event][themeFields.styles.mainColor],
    },
    settingsItem: {
      color:
        theme.colors[themeFields.items.general][themeFields.styles.mainColor],
      paddingRight: 10,
    },
    settingsItemSelected: {
      color:
        theme.colors[themeFields.items.general][
          themeFields.styles.secondaryColor
        ],
      paddingRight: 10,
    },
  });
